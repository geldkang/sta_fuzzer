diff -Nur --strip-trailing-cr sulley/sulley/sessions.py sulley.repeat_patch/sulley/sessions.py
--- sulley/sulley/sessions.py	2012-08-23 23:06:53.139769085 +0200
+++ sulley.repeat_patch/sulley/sessions.py	2012-08-30 19:50:30.552542995 +0200
@@ -109,7 +109,7 @@
 
 ########################################################################################################################
 class session (pgraph.graph):
-    def __init__ (self, session_filename=None, skip=0, sleep_time=1.0, log_level=2, proto="tcp", bind=None, restart_interval=0, timeout=5.0, web_port=26000, crash_threshold=3, restart_sleep_time=300):
+    def __init__ (self, session_filename=None, skip=0, repeat_time=0, repeat_number=0, sleep_time=1.0, log_level=2, proto="tcp", bind=None, restart_interval=0, timeout=5.0, web_port=26000, crash_threshold=3, restart_sleep_time=300):
         '''
         Extends pgraph.graph and provides a container for architecting protocol dialogs.
 
@@ -117,6 +117,11 @@
         @kwarg session_filename:   (Optional, def=None) Filename to serialize persistant data to
         @type  skip:               Integer
         @kwarg skip:               (Optional, def=0) Number of test cases to skip
+        @type  repeat_time:        Integer
+        @kwarg repeat_time:        (Optional, def=0) Repeat duration of the test case (in seconds)
+        @type  repeat_number:      Integer
+        @kwarg repeat_number:      (Optional, def=0) Repeat number of the test case
+        @type  sleep_time:         Float
         @type  sleep_time:         Float
         @kwarg sleep_time:         (Optional, def=1.0) Time to sleep in between tests
         @type  log_level:          Integer
@@ -140,6 +145,8 @@
 
         self.session_filename    = session_filename
         self.skip                = skip
+        self.repeat_time         = repeat_time
+        self.repeat_number       = repeat_number
         self.sleep_time          = sleep_time
         self.log_level           = log_level
         self.proto               = proto.lower()
@@ -467,11 +474,21 @@
                             continue
 
                         # now send the current node we are fuzzing.
-                        try:
-                            self.transmit(sock, self.fuzz_node, edge, target)
-                        except Exception, e:
-                            error_handler(e, "failed transmitting fuzz node", target, sock)
-                            continue
+                        if self.repeat_time:
+                            start_time = time.time()
+                            try:
+                                while (time.time() - start_time) < self.repeat_time:
+                                    self.transmit(sock, self.fuzz_node, edge, target)
+                            except Exception, e:
+                                error_handler(e, "failed transmitting fuzz node", target, sock)
+                                continue
+                        else:
+                            for i in xrange(self.repeat_number + 1):
+                                try:
+                                    self.transmit(sock, self.fuzz_node, edge, target)
+                                except Exception, e:
+                                    error_handler(e, "failed transmitting fuzz node", target, sock)
+                                    continue
 
                         # if we reach this point the send was successful for break out of the while(1).
                         break
